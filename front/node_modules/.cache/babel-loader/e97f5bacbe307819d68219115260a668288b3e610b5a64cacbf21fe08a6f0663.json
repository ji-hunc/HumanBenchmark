{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/pages/ReactionTimeTest/reactionTimeTest.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport ResultBox from '../../components/ResultBox/ResultBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReactionTimeTest() {\n  _s();\n  const [colorState, setColorState] = useState(1);\n  const [color, setColor] = useState('rgb(43, 135, 209)');\n  const [randomTimer, setRandomTimer] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [result, setResult] = useState('click to start');\n  const [isTesting, setIsTesting] = useState(false);\n  const [tryCount, setTrycount] = useState('');\n  const [isFinishMeasure, setIsFinishMeasure] = useState(null);\n  const red = 'rgb(206, 38, 54)';\n  const green = 'rgb(75, 219, 106)';\n  const blue = 'rgb(43, 135, 209)';\n  const max = 5000;\n  const min = 2000;\n  const changeToGreen = () => {\n    const randomNum = Math.random() * (max - min) + min;\n    const timerId = setTimeout(() => {\n      setColor(green);\n      setStartTime(Date.now());\n      console.log(startTime);\n      setColorState(3);\n    }, 1);\n    setRandomTimer(timerId);\n  };\n  const handleClick = () => {\n    if (!isTesting) {\n      setIsTesting(true);\n      setTrycount(5);\n      setIsFinishMeasure(false);\n    }\n    if (colorState == 1) {\n      // if blue\n      setColor(red); // to red\n      setColorState(2); // set to\n      changeToGreen();\n    } else if (colorState == 2) {\n      // if red\n      clearTimeout(randomTimer);\n      setResult('Too Fast!');\n      setColor(blue); // to green\n      setColorState(1); // set to blue\n    } else {\n      // if green\n      setResult(Date.now() - startTime + ' ms');\n      if (tryCount - 1 == 0) {\n        setIsTesting(false);\n        setTrycount(-1);\n        setIsFinishMeasure(true);\n        console.log('finish!!!!!!!');\n      } else {\n        setTrycount(state => state - 1);\n      }\n      setColor(blue); // to blue\n      setColorState(1); // set to blue\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(style.Container, {\n    onMouseDown: () => handleClick(),\n    style: {\n      backgroundColor: color\n    },\n    children: colorState == 1 ?\n    /*#__PURE__*/\n    // blue 화면일 때\n    _jsxDEV(\"div\", {\n      children: isFinishMeasure ? /*#__PURE__*/_jsxDEV(ResultBox, {\n        testTitle: \"Reaction Time\",\n        testResult: \"320 ms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [result, isTesting ? /*#__PURE__*/_jsxDEV(style.SubText, {\n          children: \"click to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : colorState == 2 ?\n    /*#__PURE__*/\n    // red 화면일 떄\n    _jsxDEV(style.MainText, {\n      children: \"Wait for Green ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // green 화면일 때\n    _jsxDEV(style.MainText, {\n      children: \"Click!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(ReactionTimeTest, \"OCwLk9Y8hSFTGLCFAhVhIpB3ah4=\");\n_c = ReactionTimeTest;\nvar _c;\n$RefreshReg$(_c, \"ReactionTimeTest\");","map":{"version":3,"names":["useState","React","style","ResultBox","jsxDEV","_jsxDEV","ReactionTimeTest","_s","colorState","setColorState","color","setColor","randomTimer","setRandomTimer","startTime","setStartTime","result","setResult","isTesting","setIsTesting","tryCount","setTrycount","isFinishMeasure","setIsFinishMeasure","red","green","blue","max","min","changeToGreen","randomNum","Math","random","timerId","setTimeout","Date","now","console","log","handleClick","clearTimeout","state","Container","onMouseDown","backgroundColor","children","testTitle","testResult","fileName","_jsxFileName","lineNumber","columnNumber","SubText","MainText","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/pages/ReactionTimeTest/reactionTimeTest.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport ResultBox from '../../components/ResultBox/ResultBox';\n\nexport default function ReactionTimeTest() {\n  const [colorState, setColorState] = useState(1);\n  const [color, setColor] = useState('rgb(43, 135, 209)');\n  const [randomTimer, setRandomTimer] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [result, setResult] = useState('click to start');\n  const [isTesting, setIsTesting] = useState(false);\n  const [tryCount, setTrycount] = useState('');\n  const [isFinishMeasure, setIsFinishMeasure] = useState(null);\n\n  const red = 'rgb(206, 38, 54)';\n  const green = 'rgb(75, 219, 106)';\n  const blue = 'rgb(43, 135, 209)';\n\n  const max = 5000;\n  const min = 2000;\n\n  const changeToGreen = () => {\n    const randomNum = Math.random() * (max - min) + min;\n    const timerId = setTimeout(() => {\n      setColor(green);\n      setStartTime(Date.now());\n      console.log(startTime);\n      setColorState(3);\n    }, 1);\n    setRandomTimer(timerId);\n  };\n\n  const handleClick = () => {\n    if (!isTesting) {\n      setIsTesting(true);\n      setTrycount(5);\n      setIsFinishMeasure(false);\n    }\n    if (colorState == 1) {\n      // if blue\n      setColor(red); // to red\n      setColorState(2); // set to\n      changeToGreen();\n    } else if (colorState == 2) {\n      // if red\n      clearTimeout(randomTimer);\n      setResult('Too Fast!');\n      setColor(blue); // to green\n      setColorState(1); // set to blue\n    } else {\n      // if green\n      setResult(Date.now() - startTime + ' ms');\n      if (tryCount - 1 == 0) {\n        setIsTesting(false);\n        setTrycount(-1);\n        setIsFinishMeasure(true);\n        console.log('finish!!!!!!!');\n      } else {\n        setTrycount((state) => state - 1);\n      }\n      setColor(blue); // to blue\n      setColorState(1); // set to blue\n    }\n  };\n\n  return (\n    <style.Container\n      onMouseDown={() => handleClick()}\n      style={{ backgroundColor: color }}\n    >\n      {colorState == 1 ? ( // blue 화면일 때\n        <div>\n          {isFinishMeasure ? (\n            <ResultBox testTitle=\"Reaction Time\" testResult=\"320 ms\" />\n          ) : (\n            <div>\n              {result}\n              {isTesting ? (\n                <style.SubText>click to continue</style.SubText>\n              ) : null}\n            </div>\n          )}\n        </div>\n      ) : colorState == 2 ? ( // red 화면일 떄\n        <style.MainText>Wait for Green ...</style.MainText>\n      ) : (\n        // green 화면일 때\n        <style.MainText>Click!</style.MainText>\n      )}\n    </style.Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}