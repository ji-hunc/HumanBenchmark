{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/components/Matrix/Matrix.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport ResultBox from '../ResultBox/ResultBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Matrix() {\n  _s();\n  const [answer, setAnswer] = useState('');\n  const [level, setLevel] = useState(0);\n  const [clickCount, setClickCount] = useState(0);\n  const blockRefs = useRef([]);\n  const [question, setQuestion] = useState('135792468');\n  const background = useRef();\n  const [gameOver, setGameOver] = useState(false);\n  const row1 = [1, 2, 3].map(index => /*#__PURE__*/_jsxDEV(style.Square, {\n    onClick: event => handleBlockClick(event, index),\n    ref: el => blockRefs.current[index] = el\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this));\n  const row2 = [4, 5, 6].map(index => /*#__PURE__*/_jsxDEV(style.Square, {\n    onClick: event => handleBlockClick(event, index),\n    ref: el => blockRefs.current[index] = el\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this));\n  const row3 = [7, 8, 9].map(index => /*#__PURE__*/_jsxDEV(style.Square, {\n    onClick: event => handleBlockClick(event, index),\n    ref: el => blockRefs.current[index] = el\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this));\n  const handleBlockClick = (event, index) => {\n    const levelVar = level;\n    console.log('question: ', question[clickCount], 'index: ', index, 'clickCount: ', clickCount);\n    if (question[clickCount] != index) {\n      console.log('Game Over');\n      // game over\n      setClickCount(0);\n      setLevel(0);\n      // alert('Game Over');\n      // TODO GameOver시 처리할 프로세스 작성해야함\n      return;\n    }\n    event.target.style.backgroundColor = '#fff';\n    event.target.style.opacity = 0.8;\n    setTimeout(() => {\n      event.target.style.backgroundColor = 'rgb(0, 0, 102)';\n      event.target.style.opacity = 0.15;\n    }, 300);\n    console.log('clickCount: ', clickCount, 'level: ', level);\n    if (clickCount == level) {\n      console.log('You Win');\n      // next level\n      setLevel(state => state + 1);\n      setClickCount(0);\n      background.current.style.backgroundColor = 'rgb(43, 165, 249)';\n      setTimeout(() => {\n        background.current.style.backgroundColor = 'rgb(43, 135, 209)';\n        console.log('levellevellevellevellevel', level);\n        showQuestion(0, levelVar + 1);\n      }, 500);\n    } else {\n      setClickCount(state => state + 1);\n    }\n  };\n  const showQuestion = (index, levelVar) => {\n    if (index >= levelVar + 1) {\n      console.log('return');\n      return;\n    }\n    console.log('index: ', index, 'level: ', level);\n    blockRefs.current[question[index]].style.backgroundColor = '#fff';\n    blockRefs.current[question[index]].style.opacity = 0.8;\n    setTimeout(() => {\n      blockRefs.current[question[index]].style.backgroundColor = 'rgb(0, 0, 102)';\n      blockRefs.current[question[index]].style.opacity = 0.15;\n      showQuestion(index + 1, levelVar);\n    }, 500);\n  };\n  const startGame = index => {\n    showQuestion(index, 0);\n  };\n\n  // function highlightSequence(index) {\n  //   if (index >= sequence.length) {\n  //     // If end of sequence is reached, allow player to start inputting sequence\n  //     enableInput();\n  //     return;\n  //   }\n\n  //   // Highlight tile\n  //   const tile = sequence[index];\n  //   tile.classList.add('selected');\n\n  //   // Wait for short delay and then unhighlight tile\n  //   setTimeout(() => {\n  //     tile.classList.remove('selected');\n\n  //     // Recursively highlight next tile in sequence\n  //     highlightSequence(index + 1);\n  //   }, 500);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(style.Squares, {\n    ref: background,\n    children: [gameOver ? /*#__PURE__*/_jsxDEV(ResultBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#ffffff'\n      },\n      children: [\"LEVEL \", level + 1, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => startGame(0),\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(style.SquareRow, {\n      children: row1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(style.SquareRow, {\n      children: row2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(style.SquareRow, {\n      children: row3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(Matrix, \"h8m2fPBS8AP7zpl7bRQEY2J8HJk=\");\n_c = Matrix;\nvar _c;\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["useState","useRef","React","style","ResultBox","jsxDEV","_jsxDEV","Matrix","_s","answer","setAnswer","level","setLevel","clickCount","setClickCount","blockRefs","question","setQuestion","background","gameOver","setGameOver","row1","map","index","Square","onClick","event","handleBlockClick","ref","el","current","fileName","_jsxFileName","lineNumber","columnNumber","row2","row3","levelVar","console","log","target","backgroundColor","opacity","setTimeout","state","showQuestion","startGame","Squares","children","color","SquareRow","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/components/Matrix/Matrix.js"],"sourcesContent":["import { useState, useRef } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport ResultBox from '../ResultBox/ResultBox';\n\nexport default function Matrix() {\n  const [answer, setAnswer] = useState('');\n  const [level, setLevel] = useState(0);\n  const [clickCount, setClickCount] = useState(0);\n  const blockRefs = useRef([]);\n  const [question, setQuestion] = useState('135792468');\n  const background = useRef();\n  const [gameOver, setGameOver] = useState(false);\n\n  const row1 = [1, 2, 3].map((index) => (\n    <style.Square\n      key={index}\n      onClick={(event) => handleBlockClick(event, index)}\n      ref={(el) => (blockRefs.current[index] = el)}\n    />\n  ));\n  const row2 = [4, 5, 6].map((index) => (\n    <style.Square\n      key={index}\n      onClick={(event) => handleBlockClick(event, index)}\n      ref={(el) => (blockRefs.current[index] = el)}\n    />\n  ));\n  const row3 = [7, 8, 9].map((index) => (\n    <style.Square\n      key={index}\n      onClick={(event) => handleBlockClick(event, index)}\n      ref={(el) => (blockRefs.current[index] = el)}\n    />\n  ));\n\n  const handleBlockClick = (event, index) => {\n    const levelVar = level;\n    console.log(\n      'question: ',\n      question[clickCount],\n      'index: ',\n      index,\n      'clickCount: ',\n      clickCount,\n    );\n    if (question[clickCount] != index) {\n      console.log('Game Over');\n      // game over\n      setClickCount(0);\n      setLevel(0);\n      // alert('Game Over');\n      // TODO GameOver시 처리할 프로세스 작성해야함\n      return;\n    }\n    event.target.style.backgroundColor = '#fff';\n    event.target.style.opacity = 0.8;\n    setTimeout(() => {\n      event.target.style.backgroundColor = 'rgb(0, 0, 102)';\n      event.target.style.opacity = 0.15;\n    }, 300);\n    console.log('clickCount: ', clickCount, 'level: ', level);\n    if (clickCount == level) {\n      console.log('You Win');\n      // next level\n      setLevel((state) => state + 1);\n      setClickCount(0);\n      background.current.style.backgroundColor = 'rgb(43, 165, 249)';\n      setTimeout(() => {\n        background.current.style.backgroundColor = 'rgb(43, 135, 209)';\n        console.log('levellevellevellevellevel', level);\n        showQuestion(0, levelVar + 1);\n      }, 500);\n    } else {\n      setClickCount((state) => state + 1);\n    }\n  };\n\n  const showQuestion = (index, levelVar) => {\n    if (index >= levelVar + 1) {\n      console.log('return');\n      return;\n    }\n    console.log('index: ', index, 'level: ', level);\n    blockRefs.current[question[index]].style.backgroundColor = '#fff';\n    blockRefs.current[question[index]].style.opacity = 0.8;\n    setTimeout(() => {\n      blockRefs.current[question[index]].style.backgroundColor =\n        'rgb(0, 0, 102)';\n      blockRefs.current[question[index]].style.opacity = 0.15;\n      showQuestion(index + 1, levelVar);\n    }, 500);\n  };\n\n  const startGame = (index) => {\n    showQuestion(index, 0);\n  };\n\n  // function highlightSequence(index) {\n  //   if (index >= sequence.length) {\n  //     // If end of sequence is reached, allow player to start inputting sequence\n  //     enableInput();\n  //     return;\n  //   }\n\n  //   // Highlight tile\n  //   const tile = sequence[index];\n  //   tile.classList.add('selected');\n\n  //   // Wait for short delay and then unhighlight tile\n  //   setTimeout(() => {\n  //     tile.classList.remove('selected');\n\n  //     // Recursively highlight next tile in sequence\n  //     highlightSequence(index + 1);\n  //   }, 500);\n  // }\n\n  return (\n    <style.Squares ref={background}>\n      {gameOver ? <ResultBox /> : null}\n      <h1 style={{ color: '#ffffff' }}>LEVEL {level + 1} </h1>\n      <button onClick={() => startGame(0)}>start</button>\n      <style.SquareRow>{row1}</style.SquareRow>\n      <style.SquareRow>{row2}</style.SquareRow>\n      <style.SquareRow>{row3}</style.SquareRow>\n    </style.Squares>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}