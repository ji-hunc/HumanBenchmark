{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/pages/ReactionTimeTest/reactionTimeTest.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReactionTimeTest() {\n  _s();\n  const [colorState, setColorState] = useState(1);\n  const [color, setColor] = useState('rgb(43, 135, 209)');\n  const [randomTimer, setRandomTimer] = useState(0);\n  const red = 'rgb(206, 38, 54)';\n  const green = 'rgb(75, 219, 106)';\n  const blue = 'rgb(43, 135, 209)';\n  let startTime, clickTime;\n  const changeToGreen = () => {\n    const timerId = setTimeout(() => {\n      setColor(green);\n      setColorState(3);\n    }, 1000);\n    setRandomTimer(timerId);\n    startTime = Date.now();\n  };\n  const handleClick = () => {\n    if (colorState == 1) {\n      // if blue\n      setColor(red); // to red\n      setColorState(2); // set to\n      changeToGreen();\n    } else if (colorState == 2) {\n      // if red\n      clearTimeout(randomTimer);\n      setColor(blue); // to green\n      setColorState(1); // set to blue\n    } else {\n      // if green\n      clickTime = Date.now();\n      setColor(blue); // to blue\n      setColorState(1); // set to blue\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(style.Container, {\n    onClick: () => handleClick(),\n    style: {\n      backgroundColor: color\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ReactionTimeTest, \"rmq5/qe5+ewp49f+KCJ7CJIqFWc=\");\n_c = ReactionTimeTest;\nvar _c;\n$RefreshReg$(_c, \"ReactionTimeTest\");","map":{"version":3,"names":["useState","React","style","jsxDEV","_jsxDEV","ReactionTimeTest","_s","colorState","setColorState","color","setColor","randomTimer","setRandomTimer","red","green","blue","startTime","clickTime","changeToGreen","timerId","setTimeout","Date","now","handleClick","clearTimeout","Container","onClick","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/pages/ReactionTimeTest/reactionTimeTest.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\n\nexport default function ReactionTimeTest() {\n  const [colorState, setColorState] = useState(1);\n  const [color, setColor] = useState('rgb(43, 135, 209)');\n  const [randomTimer, setRandomTimer] = useState(0);\n\n  const red = 'rgb(206, 38, 54)';\n  const green = 'rgb(75, 219, 106)';\n  const blue = 'rgb(43, 135, 209)';\n\n  let startTime, clickTime;\n\n  const changeToGreen = () => {\n    const timerId = setTimeout(() => {\n      setColor(green);\n      setColorState(3);\n    }, 1000);\n    setRandomTimer(timerId);\n    startTime = Date.now();\n  };\n\n  const handleClick = () => {\n    if (colorState == 1) {\n      // if blue\n      setColor(red); // to red\n      setColorState(2); // set to\n      changeToGreen();\n    } else if (colorState == 2) {\n      // if red\n      clearTimeout(randomTimer);\n      setColor(blue); // to green\n      setColorState(1); // set to blue\n    } else {\n      // if green\n      clickTime = Date.now();\n      setColor(blue); // to blue\n      setColorState(1); // set to blue\n    }\n  };\n\n  return (\n    <style.Container\n      onClick={() => handleClick()}\n      style={{ backgroundColor: color }}\n    ></style.Container>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,mBAAmB,CAAC;EACvD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMa,GAAG,GAAG,kBAAkB;EAC9B,MAAMC,KAAK,GAAG,mBAAmB;EACjC,MAAMC,IAAI,GAAG,mBAAmB;EAEhC,IAAIC,SAAS,EAAEC,SAAS;EAExB,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BV,QAAQ,CAACI,KAAK,CAAC;MACfN,aAAa,CAAC,CAAC,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;IACRI,cAAc,CAACO,OAAO,CAAC;IACvBH,SAAS,GAAGK,IAAI,CAACC,GAAG,EAAE;EACxB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIhB,UAAU,IAAI,CAAC,EAAE;MACnB;MACAG,QAAQ,CAACG,GAAG,CAAC,CAAC,CAAC;MACfL,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;MAClBU,aAAa,EAAE;IACjB,CAAC,MAAM,IAAIX,UAAU,IAAI,CAAC,EAAE;MAC1B;MACAiB,YAAY,CAACb,WAAW,CAAC;MACzBD,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;MAChBP,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,MAAM;MACL;MACAS,SAAS,GAAGI,IAAI,CAACC,GAAG,EAAE;MACtBZ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;MAChBP,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;;EAED,oBACEJ,OAAA,CAACF,KAAK,CAACuB,SAAS;IACdC,OAAO,EAAEA,CAAA,KAAMH,WAAW,EAAG;IAC7BrB,KAAK,EAAE;MAAEyB,eAAe,EAAElB;IAAM;EAAE;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjB;AAEvB;AAACzB,EAAA,CA7CuBD,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}