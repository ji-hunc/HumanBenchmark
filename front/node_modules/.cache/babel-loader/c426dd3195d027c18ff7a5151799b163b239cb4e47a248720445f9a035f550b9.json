{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/pages/ReactionTimeTest/reactionTimeTest.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReactionTimeTest() {\n  _s();\n  const [colorState, setColorState] = useState(1);\n  const [color, setColor] = useState('rgb(43, 135, 209)');\n  const [randomTimer, setRandomTimer] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [result, setResult] = useState('click to start');\n  const red = 'rgb(206, 38, 54)';\n  const green = 'rgb(75, 219, 106)';\n  const blue = 'rgb(43, 135, 209)';\n  const max = 5000;\n  const min = 2000;\n  const changeToGreen = () => {\n    const randomNum = Math.random() * (max - min) + min;\n    const timerId = setTimeout(() => {\n      setColor(green);\n      setStartTime(Date.now());\n      console.log(startTime);\n      setColorState(3);\n    }, randomNum);\n    setRandomTimer(timerId);\n  };\n  const handleClick = () => {\n    if (colorState == 1) {\n      // if blue\n      setColor(red); // to red\n      setColorState(2); // set to\n      changeToGreen();\n    } else if (colorState == 2) {\n      // if red\n      clearTimeout(randomTimer);\n      setResult('too fast!');\n      setColor(blue); // to green\n      setColorState(1); // set to blue\n    } else {\n      // if green\n      setResult(Date.now() - startTime + ' ms');\n      setColor(blue); // to blue\n      setColorState(1); // set to blue\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(style.Container, {\n    onClick: () => handleClick(),\n    style: {\n      backgroundColor: color\n    },\n    children: colorState == 1 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : colorState == 2 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"click!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ReactionTimeTest, \"1hk/BXnLxeM0Did74hNvpiHPyY4=\");\n_c = ReactionTimeTest;\nvar _c;\n$RefreshReg$(_c, \"ReactionTimeTest\");","map":{"version":3,"names":["useState","React","style","jsxDEV","_jsxDEV","ReactionTimeTest","_s","colorState","setColorState","color","setColor","randomTimer","setRandomTimer","startTime","setStartTime","result","setResult","red","green","blue","max","min","changeToGreen","randomNum","Math","random","timerId","setTimeout","Date","now","console","log","handleClick","clearTimeout","Container","onClick","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/pages/ReactionTimeTest/reactionTimeTest.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\n\nexport default function ReactionTimeTest() {\n  const [colorState, setColorState] = useState(1);\n  const [color, setColor] = useState('rgb(43, 135, 209)');\n  const [randomTimer, setRandomTimer] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [result, setResult] = useState('click to start');\n\n  const red = 'rgb(206, 38, 54)';\n  const green = 'rgb(75, 219, 106)';\n  const blue = 'rgb(43, 135, 209)';\n\n  const max = 5000;\n  const min = 2000;\n\n  const changeToGreen = () => {\n    const randomNum = Math.random() * (max - min) + min;\n    const timerId = setTimeout(() => {\n      setColor(green);\n      setStartTime(Date.now());\n      console.log(startTime);\n      setColorState(3);\n    }, randomNum);\n    setRandomTimer(timerId);\n  };\n\n  const handleClick = () => {\n    if (colorState == 1) {\n      // if blue\n      setColor(red); // to red\n      setColorState(2); // set to\n      changeToGreen();\n    } else if (colorState == 2) {\n      // if red\n      clearTimeout(randomTimer);\n      setResult('too fast!');\n      setColor(blue); // to green\n      setColorState(1); // set to blue\n    } else {\n      // if green\n      setResult(Date.now() - startTime + ' ms');\n      setColor(blue); // to blue\n      setColorState(1); // set to blue\n    }\n  };\n\n  return (\n    <style.Container\n      onClick={() => handleClick()}\n      style={{ backgroundColor: color }}\n    >\n      {colorState == 1 ? (\n        <h1>{result}</h1>\n      ) : colorState == 2 ? (\n        <h1>wait...</h1>\n      ) : (\n        <h1>click!</h1>\n      )}\n    </style.Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}