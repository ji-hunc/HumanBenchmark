{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/pages/NumberMemoryTest/numberMemoryTest.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport { useNavigate } from 'react-router-dom';\nimport ResultBox from '../../components/ResultBox/ResultBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NumberMemoryTest() {\n  _s();\n  const navigate = useNavigate();\n  const [question, setQuestion] = useState('Click to Start!');\n  const [isTesting, setIsTesting] = useState(false);\n  const [isTimeOver, setIsTimeOver] = useState(false);\n  const [answer, setAnswer] = useState('');\n  const [level, setLevel] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isClearLevel, setIsClearLevel] = useState(false);\n  const startGame = () => {\n    setQuestion('6');\n    setIsTesting(true);\n    setTimeout(() => setIsTimeOver(true), 1000);\n    setIsGameOver(false);\n  };\n  const nextGame = () => {};\n  const updateAnswer = event => {\n    setAnswer(event.target.value);\n  };\n  const checkAnswer = event => {\n    console.log(answer);\n    if (question == answer) {\n      setIsClearLevel(true);\n    } else {\n      console.log('wrong answer');\n      setLevel(0);\n      setIsTesting(false);\n      setIsGameOver(true);\n      setIsTimeOver(false);\n    }\n  };\n  const goNextLevel = () => {\n    console.log('correct');\n    const sequence = getRandomSequence(level + 2);\n    console.log(sequence);\n    setQuestion(sequence);\n    setLevel(state => state + 1);\n    setIsTimeOver(false);\n    setIsClearLevel(false);\n    setTimeout(() => setIsTimeOver(true), 1000);\n  };\n  const getRandomSequence = length => {\n    const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let sequence = '';\n    for (let i = 0; i < length; i++) {\n      let randomNumber = numbers[Math.floor(Math.random() * numbers.length)];\n      sequence += randomNumber;\n    }\n    return sequence;\n  };\n  return /*#__PURE__*/_jsxDEV(style.Container, {\n    children: [isTesting ? null : /*#__PURE__*/_jsxDEV(style.Button, {\n      onClick: startGame,\n      children: \"start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), isGameOver ? /*#__PURE__*/_jsxDEV(ResultBox, {\n      clickTryAgain: initTest,\n      testTitle: \"Reaction Time\",\n      testResult: totalScoreTime / 5 + ' ms'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isClearLevel ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"CLEAR\", /*#__PURE__*/_jsxDEV(style.Button, {\n          onClick: goNextLevel,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isTimeOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: updateAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(style.Button, {\n            onClick: checkAnswer,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(style.Question, {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(NumberMemoryTest, \"sZ+XWSl0KB0reIJxyV2sumxbzh4=\", false, function () {\n  return [useNavigate];\n});\n_c = NumberMemoryTest;\nvar _c;\n$RefreshReg$(_c, \"NumberMemoryTest\");","map":{"version":3,"names":["useState","React","style","useNavigate","ResultBox","jsxDEV","_jsxDEV","NumberMemoryTest","_s","navigate","question","setQuestion","isTesting","setIsTesting","isTimeOver","setIsTimeOver","answer","setAnswer","level","setLevel","isGameOver","setIsGameOver","isClearLevel","setIsClearLevel","startGame","setTimeout","nextGame","updateAnswer","event","target","value","checkAnswer","console","log","goNextLevel","sequence","getRandomSequence","state","length","numbers","i","randomNumber","Math","floor","random","Container","children","Button","onClick","fileName","_jsxFileName","lineNumber","columnNumber","clickTryAgain","initTest","testTitle","testResult","totalScoreTime","display","flexDirection","onChange","Question","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/pages/NumberMemoryTest/numberMemoryTest.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport { useNavigate } from 'react-router-dom';\nimport ResultBox from '../../components/ResultBox/ResultBox';\n\nexport default function NumberMemoryTest() {\n  const navigate = useNavigate();\n  const [question, setQuestion] = useState('Click to Start!');\n  const [isTesting, setIsTesting] = useState(false);\n  const [isTimeOver, setIsTimeOver] = useState(false);\n  const [answer, setAnswer] = useState('');\n  const [level, setLevel] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isClearLevel, setIsClearLevel] = useState(false);\n\n  const startGame = () => {\n    setQuestion('6');\n    setIsTesting(true);\n    setTimeout(() => setIsTimeOver(true), 1000);\n    setIsGameOver(false);\n  };\n\n  const nextGame = () => {};\n\n  const updateAnswer = (event) => {\n    setAnswer(event.target.value);\n  };\n\n  const checkAnswer = (event) => {\n    console.log(answer);\n    if (question == answer) {\n      setIsClearLevel(true);\n    } else {\n      console.log('wrong answer');\n      setLevel(0);\n      setIsTesting(false);\n      setIsGameOver(true);\n      setIsTimeOver(false);\n    }\n  };\n\n  const goNextLevel = () => {\n    console.log('correct');\n    const sequence = getRandomSequence(level + 2);\n    console.log(sequence);\n    setQuestion(sequence);\n    setLevel((state) => state + 1);\n    setIsTimeOver(false);\n    setIsClearLevel(false);\n    setTimeout(() => setIsTimeOver(true), 1000);\n  };\n\n  const getRandomSequence = (length) => {\n    const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let sequence = '';\n\n    for (let i = 0; i < length; i++) {\n      let randomNumber = numbers[Math.floor(Math.random() * numbers.length)];\n      sequence += randomNumber;\n    }\n    return sequence;\n  };\n\n  return (\n    <style.Container>\n      {isTesting ? null : (\n        <style.Button onClick={startGame}>start Game</style.Button>\n      )}\n\n      {isGameOver ? (\n        <ResultBox\n          clickTryAgain={initTest}\n          testTitle=\"Reaction Time\"\n          testResult={totalScoreTime / 5 + ' ms'}\n        />\n      ) : (\n        <div>\n          {isClearLevel ? (\n            <div>\n              CLEAR\n              <style.Button onClick={goNextLevel}>next</style.Button>\n            </div>\n          ) : (\n            <div>\n              {isTimeOver ? (\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <input onChange={updateAnswer} />\n                  <style.Button onClick={checkAnswer}>Submit</style.Button>\n                </div>\n              ) : (\n                <style.Question>{question}</style.Question>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </style.Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}