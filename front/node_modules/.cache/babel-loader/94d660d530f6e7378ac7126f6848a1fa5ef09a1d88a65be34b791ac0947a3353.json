{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/pages/NumberMemoryTest/numberMemoryTest.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport { useNavigate } from 'react-router-dom';\nimport ResultBox from '../../components/ResultBox/ResultBox';\nimport AnswerCheck from '../../components/AnswerCheck/AnswerCheck';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NumberMemoryTest() {\n  _s();\n  const navigate = useNavigate();\n  const [question, setQuestion] = useState('');\n  const [isTesting, setIsTesting] = useState(false);\n  const [isTimeOver, setIsTimeOver] = useState(false);\n  const [answer, setAnswer] = useState('');\n  const [level, setLevel] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isClearLevel, setIsClearLevel] = useState(false);\n  const input = useRef();\n  const startGame = () => {\n    setQuestion('6');\n    setIsTesting(true);\n    setTimeout(() => setIsTimeOver(true), 1000);\n    setIsGameOver(false);\n    setLevel(0);\n  };\n  const nextGame = () => {};\n  const updateAnswer = event => {\n    setAnswer(event.target.value);\n  };\n  const checkAnswer = event => {\n    console.log(answer);\n    if (question == answer) {\n      setIsClearLevel(true);\n    } else {\n      console.log('wrong answer');\n      setIsGameOver(true);\n      setIsTimeOver(false);\n    }\n  };\n  const goNextLevel = () => {\n    console.log('correct');\n    const sequence = getRandomSequence(level + 2);\n    console.log(sequence);\n    setQuestion(sequence);\n    setLevel(state => state + 1);\n    setIsTimeOver(false);\n    setIsClearLevel(false);\n    setTimeout(() => setIsTimeOver(true), 1000);\n  };\n  const getRandomSequence = length => {\n    const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let sequence = '';\n    for (let i = 0; i < length; i++) {\n      let randomNumber = numbers[Math.floor(Math.random() * numbers.length)];\n      sequence += randomNumber;\n    }\n    return sequence;\n  };\n  const handleOnKeyPress = e => {\n    if (e.key === 'Enter') {\n      checkAnswer(); // Enter 입력이 되면 클릭 이벤트 실행\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(style.Container, {\n    children: [isTesting ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(style.startLabel, {\n        onClick: startGame,\n        children: \"Click to Start!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(style.Button, {\n        onClick: startGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), isGameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AnswerCheck, {\n        correctAnswer: question,\n        answer: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultBox, {\n        clickTryAgain: startGame,\n        testTitle: \"NumberMemory Test\",\n        testResult: level + ' Level'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isClearLevel ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"CLEAR\", /*#__PURE__*/_jsxDEV(style.Button, {\n          onClick: goNextLevel,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isTimeOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(style.questionLabel, {\n            children: \"What was the Number?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(style.Input, {\n            ref: input,\n            onChange: updateAnswer,\n            onKeyPress: handleOnKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(style.Button, {\n            onClick: checkAnswer,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(style.Question, {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(NumberMemoryTest, \"Mp/V3de6coYCCDNJxO8YckOHXMc=\", false, function () {\n  return [useNavigate];\n});\n_c = NumberMemoryTest;\nvar _c;\n$RefreshReg$(_c, \"NumberMemoryTest\");","map":{"version":3,"names":["useState","useRef","React","style","useNavigate","ResultBox","AnswerCheck","jsxDEV","_jsxDEV","NumberMemoryTest","_s","navigate","question","setQuestion","isTesting","setIsTesting","isTimeOver","setIsTimeOver","answer","setAnswer","level","setLevel","isGameOver","setIsGameOver","isClearLevel","setIsClearLevel","input","startGame","setTimeout","nextGame","updateAnswer","event","target","value","checkAnswer","console","log","goNextLevel","sequence","getRandomSequence","state","length","numbers","i","randomNumber","Math","floor","random","handleOnKeyPress","e","key","Container","children","startLabel","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Button","correctAnswer","clickTryAgain","testTitle","testResult","display","flexDirection","questionLabel","Input","ref","onChange","onKeyPress","Question","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/pages/NumberMemoryTest/numberMemoryTest.js"],"sourcesContent":["import { useState, useRef } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport { useNavigate } from 'react-router-dom';\nimport ResultBox from '../../components/ResultBox/ResultBox';\nimport AnswerCheck from '../../components/AnswerCheck/AnswerCheck';\n\nexport default function NumberMemoryTest() {\n  const navigate = useNavigate();\n  const [question, setQuestion] = useState('');\n  const [isTesting, setIsTesting] = useState(false);\n  const [isTimeOver, setIsTimeOver] = useState(false);\n  const [answer, setAnswer] = useState('');\n  const [level, setLevel] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isClearLevel, setIsClearLevel] = useState(false);\n\n  const input = useRef();\n\n  const startGame = () => {\n    setQuestion('6');\n    setIsTesting(true);\n    setTimeout(() => setIsTimeOver(true), 1000);\n    setIsGameOver(false);\n    setLevel(0);\n  };\n\n  const nextGame = () => {};\n\n  const updateAnswer = (event) => {\n    setAnswer(event.target.value);\n  };\n\n  const checkAnswer = (event) => {\n    console.log(answer);\n    if (question == answer) {\n      setIsClearLevel(true);\n    } else {\n      console.log('wrong answer');\n      setIsGameOver(true);\n      setIsTimeOver(false);\n    }\n  };\n\n  const goNextLevel = () => {\n    console.log('correct');\n    const sequence = getRandomSequence(level + 2);\n    console.log(sequence);\n    setQuestion(sequence);\n    setLevel((state) => state + 1);\n    setIsTimeOver(false);\n    setIsClearLevel(false);\n    setTimeout(() => setIsTimeOver(true), 1000);\n  };\n\n  const getRandomSequence = (length) => {\n    const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let sequence = '';\n\n    for (let i = 0; i < length; i++) {\n      let randomNumber = numbers[Math.floor(Math.random() * numbers.length)];\n      sequence += randomNumber;\n    }\n    return sequence;\n  };\n\n  const handleOnKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      checkAnswer(); // Enter 입력이 되면 클릭 이벤트 실행\n    }\n  };\n\n  return (\n    <style.Container>\n      {isTesting ? null : (\n        <div>\n          <style.startLabel onClick={startGame}>\n            Click to Start!\n          </style.startLabel>\n          <style.Button onClick={startGame}>Start Game</style.Button>\n        </div>\n      )}\n\n      {isGameOver ? (\n        <div>\n          <AnswerCheck correctAnswer={question} answer={3} />\n          <ResultBox\n            clickTryAgain={startGame}\n            testTitle=\"NumberMemory Test\"\n            testResult={level + ' Level'}\n          />\n        </div>\n      ) : (\n        <div>\n          {isClearLevel ? (\n            <div>\n              CLEAR\n              <style.Button onClick={goNextLevel}>next</style.Button>\n            </div>\n          ) : (\n            <div>\n              {isTimeOver ? (\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <style.questionLabel>\n                    What was the Number?\n                  </style.questionLabel>\n                  <style.Input\n                    ref={input}\n                    onChange={updateAnswer}\n                    onKeyPress={handleOnKeyPress}\n                  />\n                  <style.Button onClick={checkAnswer}>Submit</style.Button>\n                </div>\n              ) : (\n                <style.Question>{question}</style.Question>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </style.Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}