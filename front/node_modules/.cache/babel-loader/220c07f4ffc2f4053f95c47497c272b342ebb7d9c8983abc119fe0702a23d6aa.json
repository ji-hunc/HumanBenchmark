{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/components/Matrix/Matrix.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Matrix() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleClickBlock = () => {};\n  return /*#__PURE__*/_jsxDEV(style.Container, {\n    children: /*#__PURE__*/_jsxDEV(style.Squares, {\n      children: [/*#__PURE__*/_jsxDEV(style.SquareRow, {\n        children: [/*#__PURE__*/_jsxDEV(style.Square, {\n          onClick: () => console.log(10)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(style.Square, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(style.Square, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(style.SquareRow, {\n        children: [/*#__PURE__*/_jsxDEV(style.Square, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(style.Square, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(style.Square, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(style.SquareRow, {\n        children: [/*#__PURE__*/_jsxDEV(style.Square, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(style.Square, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(style.Square, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(Matrix, \"z//ctU94R2UzDKliEZDQnqFHB00=\");\n_c = Matrix;\nvar _c;\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["useState","React","style","jsxDEV","_jsxDEV","Matrix","_s","question","setQuestion","answer","setAnswer","handleClickBlock","Container","children","Squares","SquareRow","Square","onClick","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/components/Matrix/Matrix.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\n\nexport default function Matrix() {\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleClickBlock = () => {};\n  return (\n    <style.Container>\n      <style.Squares>\n        <style.SquareRow>\n          <style.Square onClick={() => console.log(10)} />\n          <style.Square />\n          <style.Square />\n        </style.SquareRow>\n        <style.SquareRow>\n          <style.Square />\n          <style.Square />\n          <style.Square />\n        </style.SquareRow>\n        <style.SquareRow>\n          <style.Square />\n          <style.Square />\n          <style.Square />\n        </style.SquareRow>\n      </style.Squares>\n    </style.Container>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMW,gBAAgB,GAAGA,CAAA,KAAM,CAAC,CAAC;EACjC,oBACEP,OAAA,CAACF,KAAK,CAACU,SAAS;IAAAC,QAAA,eACdT,OAAA,CAACF,KAAK,CAACY,OAAO;MAAAD,QAAA,gBACZT,OAAA,CAACF,KAAK,CAACa,SAAS;QAAAF,QAAA,gBACdT,OAAA,CAACF,KAAK,CAACc,MAAM;UAACC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,EAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAChDnB,OAAA,CAACF,KAAK,CAACc,MAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAChBnB,OAAA,CAACF,KAAK,CAACc,MAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eAClBnB,OAAA,CAACF,KAAK,CAACa,SAAS;QAAAF,QAAA,gBACdT,OAAA,CAACF,KAAK,CAACc,MAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAChBnB,OAAA,CAACF,KAAK,CAACc,MAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAChBnB,OAAA,CAACF,KAAK,CAACc,MAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eAClBnB,OAAA,CAACF,KAAK,CAACa,SAAS;QAAAF,QAAA,gBACdT,OAAA,CAACF,KAAK,CAACc,MAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAChBnB,OAAA,CAACF,KAAK,CAACc,MAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAChBnB,OAAA,CAACF,KAAK,CAACc,MAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEtB;AAACjB,EAAA,CAzBuBD,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}