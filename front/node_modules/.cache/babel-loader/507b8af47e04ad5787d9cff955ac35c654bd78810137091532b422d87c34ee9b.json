{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/pages/ReactionTimeTest/reactionTimeTest.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReactionTimeTest() {\n  _s();\n  const [colorState, setColorState] = useState(1);\n  const [color, setColor] = useState('rgb(43, 135, 209)');\n  const [randomTimer, setRandomTimer] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [result, setResult] = useState('');\n  const red = 'rgb(206, 38, 54)';\n  const green = 'rgb(75, 219, 106)';\n  const blue = 'rgb(43, 135, 209)';\n  const changeToGreen = () => {\n    const timerId = setTimeout(() => {\n      setColor(green);\n      setStartTime(Date.now());\n      console.log(startTime);\n      setColorState(3);\n    }, 1000);\n    setRandomTimer(timerId);\n  };\n  const handleClick = () => {\n    if (colorState == 1) {\n      // if blue\n      setColor(red); // to red\n      setColorState(2); // set to\n      changeToGreen();\n    } else if (colorState == 2) {\n      // if red\n      clearTimeout(randomTimer);\n      setColor(blue); // to green\n      setColorState(1); // set to blue\n    } else {\n      // if green\n      console.log(Date.now() - startTime);\n      alert(Date.now() - startTime);\n      setColor(blue); // to blue\n      setColorState(1); // set to blue\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(style.Container, {\n    onClick: () => handleClick(),\n    style: {\n      backgroundColor: color\n    },\n    children: result\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ReactionTimeTest, \"eSBzD4jzJM65+gCizQNB2kKvRAY=\");\n_c = ReactionTimeTest;\nvar _c;\n$RefreshReg$(_c, \"ReactionTimeTest\");","map":{"version":3,"names":["useState","React","style","jsxDEV","_jsxDEV","ReactionTimeTest","_s","colorState","setColorState","color","setColor","randomTimer","setRandomTimer","startTime","setStartTime","result","setResult","red","green","blue","changeToGreen","timerId","setTimeout","Date","now","console","log","handleClick","clearTimeout","alert","Container","onClick","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/pages/ReactionTimeTest/reactionTimeTest.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\n\nexport default function ReactionTimeTest() {\n  const [colorState, setColorState] = useState(1);\n  const [color, setColor] = useState('rgb(43, 135, 209)');\n  const [randomTimer, setRandomTimer] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [result, setResult] = useState('');\n\n  const red = 'rgb(206, 38, 54)';\n  const green = 'rgb(75, 219, 106)';\n  const blue = 'rgb(43, 135, 209)';\n\n  const changeToGreen = () => {\n    const timerId = setTimeout(() => {\n      setColor(green);\n      setStartTime(Date.now());\n      console.log(startTime);\n      setColorState(3);\n    }, 1000);\n    setRandomTimer(timerId);\n  };\n\n  const handleClick = () => {\n    if (colorState == 1) {\n      // if blue\n      setColor(red); // to red\n      setColorState(2); // set to\n      changeToGreen();\n    } else if (colorState == 2) {\n      // if red\n      clearTimeout(randomTimer);\n      setColor(blue); // to green\n      setColorState(1); // set to blue\n    } else {\n      // if green\n      console.log(Date.now() - startTime);\n      alert(Date.now() - startTime);\n      setColor(blue); // to blue\n      setColorState(1); // set to blue\n    }\n  };\n\n  return (\n    <style.Container\n      onClick={() => handleClick()}\n      style={{ backgroundColor: color }}\n    >\n      {result}\n    </style.Container>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,mBAAmB,CAAC;EACvD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMiB,GAAG,GAAG,kBAAkB;EAC9B,MAAMC,KAAK,GAAG,mBAAmB;EACjC,MAAMC,IAAI,GAAG,mBAAmB;EAEhC,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BZ,QAAQ,CAACQ,KAAK,CAAC;MACfJ,YAAY,CAACS,IAAI,CAACC,GAAG,EAAE,CAAC;MACxBC,OAAO,CAACC,GAAG,CAACb,SAAS,CAAC;MACtBL,aAAa,CAAC,CAAC,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;IACRI,cAAc,CAACS,OAAO,CAAC;EACzB,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIpB,UAAU,IAAI,CAAC,EAAE;MACnB;MACAG,QAAQ,CAACO,GAAG,CAAC,CAAC,CAAC;MACfT,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;MAClBY,aAAa,EAAE;IACjB,CAAC,MAAM,IAAIb,UAAU,IAAI,CAAC,EAAE;MAC1B;MACAqB,YAAY,CAACjB,WAAW,CAAC;MACzBD,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC;MAChBX,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,MAAM;MACL;MACAiB,OAAO,CAACC,GAAG,CAACH,IAAI,CAACC,GAAG,EAAE,GAAGX,SAAS,CAAC;MACnCgB,KAAK,CAACN,IAAI,CAACC,GAAG,EAAE,GAAGX,SAAS,CAAC;MAC7BH,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC;MAChBX,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;;EAED,oBACEJ,OAAA,CAACF,KAAK,CAAC4B,SAAS;IACdC,OAAO,EAAEA,CAAA,KAAMJ,WAAW,EAAG;IAC7BzB,KAAK,EAAE;MAAE8B,eAAe,EAAEvB;IAAM,CAAE;IAAAwB,QAAA,EAEjClB;EAAM;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAEtB;AAAC/B,EAAA,CAjDuBD,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}