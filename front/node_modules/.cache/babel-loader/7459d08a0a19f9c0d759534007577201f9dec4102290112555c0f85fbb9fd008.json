{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/components/Matrix/Matrix.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Matrix() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleBlockClick = () => {};\n  const blockGrids = Array.from(Array(9));\n  let blockIndex = 0;\n  for (let i = 0; i < 9; i++) {\n    blockGrids[i] = /*#__PURE__*/_jsxDEV(style.Square, {\n      onClick: () => handleBlockClick(blockIndex)\n    }, blockIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n    blockIndex++;\n  }\n  const r1 = [1, 2, 3];\n  const row1 = r1.map(index => /*#__PURE__*/_jsxDEV(style.Square, {\n    onClick: () => handleBlockClick(index)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this));\n  const blockGrid = Array.from(Array(3), () => new Array(3));\n  // let blockIndex = 0;\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      blockGrid[i][j] = /*#__PURE__*/_jsxDEV(style.Squares, {\n        onClick: () => handleBlockClick(blockIndex),\n        style: {\n          width: 50,\n          height: 50\n        }\n      }, blockIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n      blockIndex++;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(style.Squares, {\n    children: /*#__PURE__*/_jsxDEV(style.SquareRow, {\n      children: blockGrids\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Matrix, \"z//ctU94R2UzDKliEZDQnqFHB00=\");\n_c = Matrix;\nvar _c;\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["useState","React","style","jsxDEV","_jsxDEV","Matrix","_s","question","setQuestion","answer","setAnswer","handleBlockClick","blockGrids","Array","from","blockIndex","i","Square","onClick","fileName","_jsxFileName","lineNumber","columnNumber","r1","row1","map","index","blockGrid","j","Squares","width","height","children","SquareRow","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/components/Matrix/Matrix.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\n\nexport default function Matrix() {\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleBlockClick = () => {};\n\n  const blockGrids = Array.from(Array(9));\n  let blockIndex = 0;\n  for (let i = 0; i < 9; i++) {\n    blockGrids[i] = (\n      <style.Square\n        key={blockIndex}\n        onClick={() => handleBlockClick(blockIndex)}\n      />\n    );\n    blockIndex++;\n  }\n  const r1 = [1, 2, 3];\n  const row1 = r1.map((index) => (\n    <style.Square onClick={() => handleBlockClick(index)} />\n  ));\n\n  const blockGrid = Array.from(Array(3), () => new Array(3));\n  // let blockIndex = 0;\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      blockGrid[i][j] = (\n        <style.Squares\n          key={blockIndex}\n          onClick={() => handleBlockClick(blockIndex)}\n          style={{ width: 50, height: 50 }}\n        />\n      );\n      blockIndex++;\n    }\n  }\n  return (\n    <style.Squares>\n      <style.SquareRow>\n        {/* {blockGrids.map((row, index) => (\n          <style.Squares\n            key={blockIndex}\n            onClick={() => handleBlockClick(blockIndex)}\n          />\n        ))} */}\n        {blockGrids}\n      </style.SquareRow>\n    </style.Squares>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMW,gBAAgB,GAAGA,CAAA,KAAM,CAAC,CAAC;EAEjC,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;EACvC,IAAIE,UAAU,GAAG,CAAC;EAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BJ,UAAU,CAACI,CAAC,CAAC,gBACXZ,OAAA,CAACF,KAAK,CAACe,MAAM;MAEXC,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAACI,UAAU;IAAE,GADvCA,UAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGlB;IACDP,UAAU,EAAE;EACd;EACA,MAAMQ,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,MAAMC,IAAI,GAAGD,EAAE,CAACE,GAAG,CAAEC,KAAK,iBACxBtB,OAAA,CAACF,KAAK,CAACe,MAAM;IAACC,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAACe,KAAK;EAAE;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtD,CAAC;EAEF,MAAMK,SAAS,GAAGd,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,IAAIA,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1D;EACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BD,SAAS,CAACX,CAAC,CAAC,CAACY,CAAC,CAAC,gBACbxB,OAAA,CAACF,KAAK,CAAC2B,OAAO;QAEZX,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAACI,UAAU,CAAE;QAC5Cb,KAAK,EAAE;UAAE4B,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG;MAAE,GAF5BhB,UAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIlB;MACDP,UAAU,EAAE;IACd;EACF;EACA,oBACEX,OAAA,CAACF,KAAK,CAAC2B,OAAO;IAAAG,QAAA,eACZ5B,OAAA,CAACF,KAAK,CAAC+B,SAAS;MAAAD,QAAA,EAObpB;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEpB;AAAChB,EAAA,CAhDuBD,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}