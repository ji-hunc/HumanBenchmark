{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/pages/ReactionTimeTest/reactionTimeTest.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport ResultBox from '../../components/ResultBox/ResultBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReactionTimeTest() {\n  _s();\n  // 배경색 관련\n  const [colorState, setColorState] = useState(1);\n  const [color, setColor] = useState('rgb(43, 135, 209)');\n  // 타이머 ref state, 시간 기록\n  const [randomTimer, setRandomTimer] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  // 결과 시간 기록\n  const [result, setResult] = useState('click to start!');\n  // 테스트 진행 관련\n  const [tryCount, setTrycount] = useState('');\n  const [isTesting, setIsTesting] = useState(false);\n  const [isFinishMeasure, setIsFinishMeasure] = useState(null);\n  const [totalScoreTime, setTotalScoreTime] = useState(0);\n  // 테스트 종료 후 배경 커서 상태 변경\n  const [cursor, setCursor] = useState('pointer');\n\n  // 배경색\n  const red = 'rgb(206, 38, 54)';\n  const green = 'rgb(75, 219, 106)';\n  const blue = 'rgb(43, 135, 209)';\n\n  // 기다리는 시간의 최대, 최솟값\n  const ranMax = 5000;\n  const ranMin = 2000;\n  const changeToGreen = () => {\n    const randomNum = Math.random() * (ranMax - ranMin) + ranMin;\n    const timerId = setTimeout(() => {\n      setColor(green);\n      setStartTime(Date.now());\n      setColorState(3);\n    }, randomNum);\n    setRandomTimer(timerId);\n  };\n  const initTest = () => {\n    setIsTesting(false);\n    setTrycount(5);\n    setIsFinishMeasure(false);\n    setTotalScoreTime(0);\n    setCursor('pointer');\n    setResult('click to start!');\n  };\n  const handleClick = () => {\n    // 테스트가 끝났으면(5회) 배경 커서 변경 및 클릭 무효화\n    if (isFinishMeasure) {\n      setCursor('default');\n      return;\n    }\n    // 테스트가 끌났으면(5회) 초기화 진행\n    if (!isTesting) {\n      initTest();\n    }\n    if (colorState == 1) {\n      // blue 화면일 때\n      setIsTesting(true);\n      setColor(red); // to red\n      setColorState(2); // set to\n      changeToGreen();\n    } else if (colorState == 2) {\n      // red 화면일 떄\n      clearTimeout(randomTimer);\n      setResult('Too Fast!');\n      setColor(blue); // to green\n      setColorState(1); // set to blue\n    } else {\n      // green 화면일 때\n      const score = Date.now() - startTime;\n      setResult(score + ' ms');\n      setTotalScoreTime(state => state + score);\n      if (tryCount - 1 == 0) {\n        setIsTesting(false);\n        setTrycount(-1);\n        setIsFinishMeasure(true);\n        setCursor('default');\n      } else {\n        setTrycount(state => state - 1);\n      }\n      setColor(blue); // to blue\n      setColorState(1); // set to blue\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(style.Container, {\n    style: {\n      cursor: cursor,\n      backgroundColor: color\n    },\n    onMouseDown: () => handleClick(),\n    children: colorState == 1 ?\n    /*#__PURE__*/\n    // blue 화면일 때\n    _jsxDEV(\"div\", {\n      style: {\n        color: 'white'\n      },\n      children: isFinishMeasure ? /*#__PURE__*/_jsxDEV(ResultBox, {\n        clickTryAgain: initTest,\n        testTitle: \"Reaction Time\",\n        testResult: totalScoreTime / 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(style.MainText, {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), isTesting ? /*#__PURE__*/_jsxDEV(style.SubText, {\n          children: \"click to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : colorState == 2 ?\n    /*#__PURE__*/\n    // red 화면일 떄\n    _jsxDEV(style.MainText, {\n      children: \"Wait for Green ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // green 화면일 때\n    _jsxDEV(style.MainText, {\n      children: \"Click!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(ReactionTimeTest, \"yLhGDC9Apl3TrYhvBL3joqvIzeI=\");\n_c = ReactionTimeTest;\nvar _c;\n$RefreshReg$(_c, \"ReactionTimeTest\");","map":{"version":3,"names":["useState","React","style","ResultBox","jsxDEV","_jsxDEV","ReactionTimeTest","_s","colorState","setColorState","color","setColor","randomTimer","setRandomTimer","startTime","setStartTime","result","setResult","tryCount","setTrycount","isTesting","setIsTesting","isFinishMeasure","setIsFinishMeasure","totalScoreTime","setTotalScoreTime","cursor","setCursor","red","green","blue","ranMax","ranMin","changeToGreen","randomNum","Math","random","timerId","setTimeout","Date","now","initTest","handleClick","clearTimeout","score","state","Container","backgroundColor","onMouseDown","children","clickTryAgain","testTitle","testResult","fileName","_jsxFileName","lineNumber","columnNumber","MainText","SubText","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/pages/ReactionTimeTest/reactionTimeTest.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport ResultBox from '../../components/ResultBox/ResultBox';\n\nexport default function ReactionTimeTest() {\n  // 배경색 관련\n  const [colorState, setColorState] = useState(1);\n  const [color, setColor] = useState('rgb(43, 135, 209)');\n  // 타이머 ref state, 시간 기록\n  const [randomTimer, setRandomTimer] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  // 결과 시간 기록\n  const [result, setResult] = useState('click to start!');\n  // 테스트 진행 관련\n  const [tryCount, setTrycount] = useState('');\n  const [isTesting, setIsTesting] = useState(false);\n  const [isFinishMeasure, setIsFinishMeasure] = useState(null);\n  const [totalScoreTime, setTotalScoreTime] = useState(0);\n  // 테스트 종료 후 배경 커서 상태 변경\n  const [cursor, setCursor] = useState('pointer');\n\n  // 배경색\n  const red = 'rgb(206, 38, 54)';\n  const green = 'rgb(75, 219, 106)';\n  const blue = 'rgb(43, 135, 209)';\n\n  // 기다리는 시간의 최대, 최솟값\n  const ranMax = 5000;\n  const ranMin = 2000;\n\n  const changeToGreen = () => {\n    const randomNum = Math.random() * (ranMax - ranMin) + ranMin;\n    const timerId = setTimeout(() => {\n      setColor(green);\n      setStartTime(Date.now());\n      setColorState(3);\n    }, randomNum);\n    setRandomTimer(timerId);\n  };\n\n  const initTest = () => {\n    setIsTesting(false);\n    setTrycount(5);\n    setIsFinishMeasure(false);\n    setTotalScoreTime(0);\n    setCursor('pointer');\n    setResult('click to start!');\n  };\n\n  const handleClick = () => {\n    // 테스트가 끝났으면(5회) 배경 커서 변경 및 클릭 무효화\n    if (isFinishMeasure) {\n      setCursor('default');\n      return;\n    }\n    // 테스트가 끌났으면(5회) 초기화 진행\n    if (!isTesting) {\n      initTest();\n    }\n    if (colorState == 1) {\n      // blue 화면일 때\n      setIsTesting(true);\n      setColor(red); // to red\n      setColorState(2); // set to\n      changeToGreen();\n    } else if (colorState == 2) {\n      // red 화면일 떄\n      clearTimeout(randomTimer);\n      setResult('Too Fast!');\n      setColor(blue); // to green\n      setColorState(1); // set to blue\n    } else {\n      // green 화면일 때\n      const score = Date.now() - startTime;\n      setResult(score + ' ms');\n      setTotalScoreTime((state) => state + score);\n      if (tryCount - 1 == 0) {\n        setIsTesting(false);\n        setTrycount(-1);\n        setIsFinishMeasure(true);\n        setCursor('default');\n      } else {\n        setTrycount((state) => state - 1);\n      }\n      setColor(blue); // to blue\n      setColorState(1); // set to blue\n    }\n  };\n\n  return (\n    <style.Container\n      style={{ cursor: cursor, backgroundColor: color }}\n      onMouseDown={() => handleClick()}\n    >\n      {colorState == 1 ? (\n        // blue 화면일 때\n        <div style={{ color: 'white' }}>\n          {isFinishMeasure ? (\n            <ResultBox\n              clickTryAgain={initTest}\n              testTitle=\"Reaction Time\"\n              testResult={totalScoreTime / 5}\n            />\n          ) : (\n            <div>\n              <style.MainText>{result}</style.MainText>\n              {isTesting ? (\n                <style.SubText>click to continue</style.SubText>\n              ) : null}\n            </div>\n          )}\n        </div>\n      ) : colorState == 2 ? (\n        // red 화면일 떄\n        <style.MainText>Wait for Green ...</style.MainText>\n      ) : (\n        // green 화면일 때\n        <style.MainText>Click!</style.MainText>\n      )}\n    </style.Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}