{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/humanbenchmark/src/components/Matrix/Matrix.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Matrix() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleBlockClick = index => {\n    console.log(index);\n  };\n  const blockGrids = Array.from(Array(9));\n  let blockIndex = 0;\n  for (let i = 0; i < 9; i++) {\n    blockGrids[i] = /*#__PURE__*/_jsxDEV(style.Square, {\n      onClick: () => handleBlockClick(blockIndex)\n    }, blockIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n    blockIndex++;\n  }\n  const r1 = [1, 2, 3];\n  const row1 = r1.map(index => /*#__PURE__*/_jsxDEV(style.Square, {\n    onClick: () => handleBlockClick(index)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n  const r2 = [4, 5, 6];\n  const row2 = r2.map(index => /*#__PURE__*/_jsxDEV(style.Square, {\n    onClick: () => handleBlockClick(index)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this));\n  const r3 = [7, 8, 9];\n  const row3 = r3.map(index => /*#__PURE__*/_jsxDEV(style.Square, {\n    onClick: () => handleBlockClick(index)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(style.Squares, {\n    children: [/*#__PURE__*/_jsxDEV(style.SquareRow, {\n      children: row1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(style.SquareRow, {\n      children: row2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(style.SquareRow, {\n      children: row3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Matrix, \"z//ctU94R2UzDKliEZDQnqFHB00=\");\n_c = Matrix;\nvar _c;\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["useState","React","style","jsxDEV","_jsxDEV","Matrix","_s","question","setQuestion","answer","setAnswer","handleBlockClick","index","console","log","blockGrids","Array","from","blockIndex","i","Square","onClick","fileName","_jsxFileName","lineNumber","columnNumber","r1","row1","map","r2","row2","r3","row3","Squares","children","SquareRow","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/humanbenchmark/src/components/Matrix/Matrix.js"],"sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport * as style from './styles';\n\nexport default function Matrix() {\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleBlockClick = (index) => {\n    console.log(index);\n  };\n\n  const blockGrids = Array.from(Array(9));\n  let blockIndex = 0;\n  for (let i = 0; i < 9; i++) {\n    blockGrids[i] = (\n      <style.Square\n        key={blockIndex}\n        onClick={() => handleBlockClick(blockIndex)}\n      />\n    );\n    blockIndex++;\n  }\n  const r1 = [1, 2, 3];\n  const row1 = r1.map((index) => (\n    <style.Square key={index} onClick={() => handleBlockClick(index)} />\n  ));\n  const r2 = [4, 5, 6];\n  const row2 = r2.map((index) => (\n    <style.Square key={index} onClick={() => handleBlockClick(index)} />\n  ));\n  const r3 = [7, 8, 9];\n  const row3 = r3.map((index) => (\n    <style.Square key={index} onClick={() => handleBlockClick(index)} />\n  ));\n  return (\n    <style.Squares>\n      <style.SquareRow>{row1}</style.SquareRow>\n      <style.SquareRow>{row2}</style.SquareRow>\n      <style.SquareRow>{row3}</style.SquareRow>\n    </style.Squares>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}